 you need to try to make a function that first figures out the
byte postions and assigns the label the byte postion in a hash table, it can do the math by just assuming 
that all labels are 32 bit adresss and counting forward this would work for forward refrence because on the second passes
instead of putting random 32 bits you get the binaray represntaiton of the adress and put that in there, then all we have to do is 
make sure that the instructions are a multiple of 8 and then have a function 
that splits it up in to vector of strings for each line then make a vector of vector of strings and just combine
it all together with an iterator counting for byte adress (this may be right or may be a bad method but if
it is right it can be used to help with doing the first pass function) 

-make sure to test with valgrind 
-you can do diff with the output file to make sure it is really the same 

- we want to convert the vector of strings into a vector of vector of strings where each element in top vector is a vector of 8bit strings

after the label validation add each label to a hash table of string to strings where each added label has the value of zero in 32 bits. 
Then look at the inputString without labels and for each line using alot of if statments or a property of vectors or hash tables convert all elements into strings except when theres a label in which case add the hash key 

so first pass is during validation in which all labels addded to table with zero value 
second pass we get the actual bytes of everything and make the strings 

then we update the hash table of labels to match their actaul value somehow
need to keep track of bitpostion and bytes 

that way when we print it just takes the latest value in the table to print which should be the correct one 
btw at the end of each vector there will be a string element called extra which will be the extra number of zero padding needed


so we take input string, we break it up into its components and convert them into strings, once weve finished we check the length of said string and based on how far it is from a multiple of 8 we make a string element called extra that contains the neccesary padding of zeros. lastly we make string into a full string and have function that breaks it up into multiples of 8 and then adds each one to a vector and adds that vector to a vector 


l;iterly just do current byte plus 1, for the label value thats crazy 

how do i then recall so that the strings get printed again 